#!/usr/bin/env ruby

require 'optparse'
require 'vying'

rules = []
n = 10

opts = OptionParser.new
opts.on( "-r", "--rules RULES" ) { |r| rules << Kernel.const_get( r ) }
opts.on( "-n", "--number GAMES" ) { |num| n = Integer( num ) }

opts.parse( ARGV )

rules = Rules.list if rules.empty?

puts sprintf( "%20-s %16s %16s", "rules", "branch", "moves / game" )

rules.each do |r|
  total_ops = 0
  total_moves = 0

  n.times do
    g = Game.new( r )
    while ops = g.ops
      total_ops += ops.length
      total_moves += 1

      g << ops[rand(ops.length)]
    end
  end

  b = total_ops.to_f / total_moves.to_f
  mg = total_moves.to_f / n.to_f

  puts sprintf( "%20-s %16.2f %16.2f", r.to_s, b, mg )
end

